{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Proyecto Actividad 22 - Documentaci\u00f3n de Repositorios y Sitios Web","text":"<p>Este documento describe la organizaci\u00f3n y las URLs asociadas con las tareas del proyecto Actividad 22. Cada tarea est\u00e1 asignada a un propietario espec\u00edfico, y se detalla el repositorio de GitHub y los sitios web correspondientes.</p>"},{"location":"#tarea-1-sitio-en-hugo","title":"Tarea 1: Sitio en HUGO","text":""},{"location":"#propietario-rodrigo-gomez-marin","title":"Propietario: Rodrigo G\u00f3mez Mar\u00edn","text":"<ol> <li>Repositorio en GitHub </li> <li> <p>URL: https://github.com/RodrigoGMG/actividad22_1_RRH/</p> </li> <li> <p>Sitio en Netlify </p> </li> <li>URL: netlify link</li> </ol> <p>El repositorio y los sitios web se crean en la cuenta de Ana. Los dem\u00e1s miembros del grupo participan como colaboradores.</p>"},{"location":"#tarea-2-sitio-en-hugo","title":"Tarea 2: Sitio en HUGO","text":""},{"location":"#propietario-hafsa-katkout-aabil","title":"Propietario: Hafsa Katkout Aabil","text":"<ol> <li>Repositorio en GitHub </li> <li> <p>URL: https://github.com/Hafsa-Katkout/actividad22_2_RRH/</p> </li> <li> <p>Sitio en Cloudflare Pages </p> </li> <li>URL: CloudFlare link</li> </ol> <p>El repositorio y los sitios web se crean en la cuenta de Gonzalo. Los dem\u00e1s miembros del grupo participan como colaboradores.</p>"},{"location":"#tarea-3-sitio-en-mkdocs","title":"Tarea 3: Sitio en MKDOCS","text":""},{"location":"#propietaria-rimsha-iqbal","title":"Propietaria: Rimsha Iqbal","text":"<ol> <li>Repositorio en GitHub </li> <li> <p>URL: https://github.com/Rimsha-Iqbal/actividad22_3_RRH/</p> </li> <li> <p>Sitio en ClouFlare Pages </p> </li> <li>URL: https://actividad22-3-rrh.pages.dev/</li> </ol> <p>El repositorio y los sitios web se crean en la cuenta de Rodrigo. Los dem\u00e1s miembros del grupo participan como colaboradores.</p>"},{"location":"#notas-generales","title":"Notas Generales:","text":"<ul> <li>Cada miembro del grupo es propietario de una tarea y administra el repositorio y sitios web correspondientes.</li> <li>Los repositorios incluyen toda la documentaci\u00f3n necesaria para la colaboraci\u00f3n del equipo.</li> <li>Los colaboradores tienen permisos para contribuir al desarrollo y mantenimiento de los proyectos asignados.</li> </ul>"},{"location":"Hugo_anakle/","title":"\u00cdndice","text":"<ul> <li>\u00cdndice</li> <li>Actualizaci\u00f3n del sistema</li> <li>Instalaci\u00f3n de Git</li> <li>Instalaci\u00f3n de Hugo<ul> <li>Descargar el paquete de Hugo</li> <li>Instalaci\u00f3n del paquete .deb</li> </ul> </li> <li>Comprobaci\u00f3n de la versi\u00f3n de Hugo</li> <li>Creaci\u00f3n de un nuevo sitio</li> <li>Creaci\u00f3n de repositorio en GitHub</li> <li>Inicializaci\u00f3n del repositorio Git</li> <li>Adici\u00f3n de un tema en Hugo<ul> <li>Agregar el subm\u00f3dulo del tema</li> </ul> </li> <li>A\u00f1adir el tema a la configuraci\u00f3n</li> <li>Creaci\u00f3n de contenido en Hugo<ul> <li>Crear una p\u00e1gina</li> <li>Crear publicaciones o posts</li> <li>Crear un \"leaf bundle\"</li> </ul> </li> <li>Configuraci\u00f3n de archivos</li> <li>Construcci\u00f3n del sitio</li> <li>Despliegue en el servidor local</li> <li>Subir al GitHub</li> <li>Despliegue en en Netlify<ul> <li>Conectamos a gitHub repo</li> <li>Configurar los par\u00e1metros de construcci\u00f3n</li> <li>Desplegar el sitio</li> </ul> </li> <li>Despliegue en el GitHub pages</li> </ul>"},{"location":"Hugo_anakle/#actualizacion-del-sistema","title":"Actualizaci\u00f3n del sistema","text":"<ul> <li>Antes de comenzar la instalaci\u00f3n, actualizamos los repositorios con el siguiente comando: \"sudo apt update -y\"</li> </ul>"},{"location":"Hugo_anakle/#instalacion-de-git","title":"Instalaci\u00f3n de Git","text":"<ul> <li>En caso de que no tenemos git anteriormente instalamos de nuevo con el comando: \"sudo apt install git\"</li> </ul>"},{"location":"Hugo_anakle/#instalacion-de-hugo","title":"Instalaci\u00f3n de Hugo","text":""},{"location":"Hugo_anakle/#descargar-el-paquete-de-hugo","title":"Descargar el paquete de Hugo","text":"<ul> <li>Para instalar Hugo, primero descargamos el archivo .deb usando el comando wget.</li> <li>comando : \" wget https://github.com/gohugoio/hugo/releases/download/v0.135.0/hugo_extended_0.135.0_linux-amd64.deb\"</li> </ul>"},{"location":"Hugo_anakle/#instalacion-del-paquete-deb","title":"Instalaci\u00f3n del paquete .deb","text":"<ul> <li>Una vez descargado el archivo, instalamos el paquete .deb con el siguiente comando: \"apt install ./hugo_extended_0.135.0_linux-amd64.deb\"</li> </ul>"},{"location":"Hugo_anakle/#comprobacion-de-la-version-de-hugo","title":"Comprobaci\u00f3n de la versi\u00f3n de Hugo","text":"<ul> <li>Despu\u00e9s de instalar Hugo, verificamos que la instalaci\u00f3n se haya realizado correctamente ejecutando: \"hugo version\"</li> </ul>"},{"location":"Hugo_anakle/#creacion-de-un-nuevo-sitio","title":"Creaci\u00f3n de un nuevo sitio","text":"<ul> <li>creamos un nuevo sitio de Hugo utilizando el siguiente comando: \"hugo new actividad22_1_RRH\"</li> <li>Y cambiamos el directorio con el comando: \"cd actividad22_1_RRH\"</li> </ul>"},{"location":"Hugo_anakle/#creacion-de-repositorio-en-github","title":"Creaci\u00f3n de repositorio en GitHub","text":"<ul> <li>Creamos un nuevo repositorio sin README.md.</li> <li>Copiamos su enlace.</li> </ul>"},{"location":"Hugo_anakle/#inicializacion-del-repositorio-git","title":"Inicializaci\u00f3n del repositorio Git","text":"<ul> <li>Despu\u00e9s de creaxi\u00f3n del sitio Hugo, inicializamos este repositorio Git y con\u00e9ctamos a un repositorio remoto en GitHub. Los comandos para hacerlo son: \"git init\"</li> <li>\"git remote add origin https://github.com/tu_cuenta_github/myblog.git\"</li> </ul>"},{"location":"Hugo_anakle/#adicion-de-un-tema-en-hugo","title":"Adici\u00f3n de un tema en Hugo","text":""},{"location":"Hugo_anakle/#agregar-el-submodulo-del-tema","title":"Agregar el subm\u00f3dulo del tema","text":"<ul> <li>Hugo no viene con un tema preconfigurado, as\u00ed que a\u00f1adimos uno manualmente. </li> <li>El siguiente muestramos c\u00f3mo agregar el tema \"Ananke\": \"git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke\"</li> </ul>"},{"location":"Hugo_anakle/#anadir-el-tema-a-la-configuracion","title":"A\u00f1adir el tema a la configuraci\u00f3n","text":"<ul> <li>Despu\u00e9s de agregar el subm\u00f3dulo, editamos el archivo de configuraci\u00f3n hugo.toml para incluir el tema: \"echo \"theme = 'ananke'\" &gt;&gt; hugo.toml\"</li> </ul>"},{"location":"Hugo_anakle/#creacion-de-contenido-en-hugo","title":"Creaci\u00f3n de contenido en Hugo","text":""},{"location":"Hugo_anakle/#crear-una-pagina","title":"Crear una p\u00e1gina","text":"<ul> <li>Para crear una p\u00e1gina en Hugo, usa el siguiente comando: \"hugo new miembros.md\"</li> <li>Aqu\u00ed Ponemos informaci\u00f3n sobre miembros de nuestro grupo.</li> </ul>"},{"location":"Hugo_anakle/#crear-publicaciones-o-posts","title":"Crear publicaciones o posts","text":"<ul> <li>Para crear publicaciones (posts) en Hugo, ejecutamos los siguientes comandos: \"hugo new posts/cala.md\" y \"hugo new posts/rosa.md\".</li> <li>Luego agregamo contenido de estos posts.</li> </ul>"},{"location":"Hugo_anakle/#crear-un-leaf-bundle","title":"Crear un \"leaf bundle\"","text":"<ul> <li>Un \"leaf bundle\" es un directorio que incluye un archivo index.md y uno o m\u00e1s recursos. </li> <li>Para crear un \"leaf bundle\", utilizamos el siguiente comando: \"hugo new about/index.md\".</li> </ul>"},{"location":"Hugo_anakle/#configuracion-de-archivos","title":"Configuraci\u00f3n de archivos","text":"<ul> <li>Hugo soporta tres formatos de configuraci\u00f3n: YAML, JSON y TOML. Por defecto, Hugo utiliza el formato TOML.</li> <li>Aqu\u00ed Configuramos el archivo hugo.toml donde ponemos baseurl, languageCodetitle, theme.</li> <li>Tambi\u00e9n ponemos menu para nuestro sitio.</li> </ul>"},{"location":"Hugo_anakle/#construccion-del-sitio","title":"Construcci\u00f3n del sitio","text":"<ul> <li>Para generar el sitio est\u00e1tico (HTML, CSS, JS), utilizamos el siguiente comando: \"hugo\"</li> <li> <p>El sitio se almacenar\u00e1 en un directorio llamado public. A continuaci\u00f3n, puedes copiar este directorio al servidor web utilizando comandos como FTP, SSH o SCP.</p> </li> <li> <p>Tambi\u00e9n puedemos arrastrar la carpeta public a servicios de hosting en l\u00ednea como Netlify o Cloudflare.</p> </li> </ul>"},{"location":"Hugo_anakle/#-para-github-pages-solo-podras-asociar-la-carpeta-docs-con-el-siguiente-comando-hugo-d-docs","title":"- Para GitHub Pages, solo podr\u00e1s asociar la carpeta docs con el siguiente comando: \"hugo -d docs\"","text":""},{"location":"Hugo_anakle/#despliegue-en-el-servidor-local","title":"Despliegue en el servidor local","text":"<ul> <li>Para ver el sitio en tu servidor de desarrollo local, ejecuta el siguiente comando: \"hugo server\"</li> <li>Esto lanzar\u00e1 un servidor local donde podr\u00e1s ver los cambios realizados en tu sitio.</li> </ul>"},{"location":"Hugo_anakle/#subir-al-github","title":"Subir al GitHub","text":"<ul> <li>Para subir al github utilizamos los comandos de Git habituales:</li> <li>git add .</li> <li>git commit -m \"Configuraci\u00f3n del sitio Hugo\"</li> <li>git push origin master</li> </ul>"},{"location":"Hugo_anakle/#despliegue-en-en-netlify","title":"Despliegue en en Netlify","text":"<ul> <li>Netlify es una plataforma popular para desplegar sitios web est\u00e1ticos. A continuaci\u00f3n se describen los pasos para desplegar tu sitio Hugo en Netlify.</li> </ul>"},{"location":"Hugo_anakle/#conectamos-a-github-repo","title":"Conectamos a gitHub repo","text":"<ul> <li> <p>Estos son los pasos para conectar a repositorio de GitHub:</p> </li> <li> <p>En el panel de control de Netlify, hacemos clic en \"New site from Git\".</p> </li> <li>Seleccionamos GitHub como fuente de tu repositorio.</li> <li>Autorizamos a Netlify para acceder a mi cuenta de GitHub, si a\u00fan no lo has hecho.</li> <li>Eligimos el repositorio de actividad22_1_RRH</li> </ul>"},{"location":"Hugo_anakle/#configurar-los-parametros-de-construccion","title":"Configurar los par\u00e1metros de construcci\u00f3n","text":"<p>Despu\u00e9s de seleccionar el repositorio, Netlify nos \u00ecde configurar los par\u00e1metros de construcci\u00f3n. </p> <ul> <li>Branch to deploy: Seleccionamos la rama <code>master</code></li> <li>Build command: Escribimos <code>hugo</code> para generar el sitio est\u00e1tico.</li> <li>Publish directory: Especificamos el directorio <code>public</code>, que es donde Hugo genera los archivos est\u00e1ticos.</li> </ul>"},{"location":"Hugo_anakle/#desplegar-el-sitio","title":"Desplegar el sitio","text":"<p>Hacmos clic en \"Deploy site\" y Netlify comenzar\u00e1 a construir y desplegar tu sitio. El proceso puede tardar unos minutos.</p>"},{"location":"Hugo_anakle/#despliegue-en-el-github-pages","title":"Despliegue en el GitHub pages","text":"<ul> <li>para desplegar al github pages eliminamos carpeta public y creamos docs.</li> <li>Tambi\u00e9n creamos carpetas y fichero de hugo.yml \".github/workflows/hugo.yml\"</li> <li>A\u00f1adimos el contenido en el fichero.</li> <li>En gitHub pages seleccionamos \"GitHub Actions\".</li> </ul>"},{"location":"Hugo_walden/","title":"Hugo_walden","text":"<p>Hola</p>"},{"location":"mkdocs/","title":"MKDOCS","text":""},{"location":"mkdocs/#indice","title":"\u00cdndice","text":"<ul> <li>\u00cdndice</li> <li>Introducci\u00f3n a MkDocs</li> <li>Requisitos Previos</li> <li>Actualizaci\u00f3n del paquete</li> <li>Instalaci\u00f3n de git</li> <li>Instalaci\u00f3n de Python Y pip</li> <li>Instalaci\u00f3n m\u00f3dulo gestor de entornos virtuales</li> <li>Creaci\u00f3n de un nuevo entorno virtual de Python</li> <li>Instalaci\u00f3n de MkDoc</li> <li>Comprobaciones Iniciales</li> <li>Creaci\u00f3n de Git Hub repository</li> <li>Creaci\u00f3n de sitio MKDOCS</li> <li>Configuraci\u00f3n en \"mkdocs.yml\"</li> <li>Servidor local de Desarrollo</li> <li>Construcci\u00f3n y Publicaci\u00f3n</li> <li>Creaci\u00f3n de rama gh-pages</li> <li>Construcci\u00f3n del Sitio</li> <li>Subir tema en el GitHub</li> <li>Publicaci\u00f3n en GitHub Pages</li> <li>Publicaci\u00f3n en CloudFlare</li> <li>Configurar un Dominio Personalizado</li> </ul>"},{"location":"mkdocs/#introduccion-a-mkdocs","title":"Introducci\u00f3n a MkDocs","text":"<p>MkDocs es una herramienta r\u00e1pida y sencilla para crear documentaci\u00f3n est\u00e1tica con Markdown. Es ideal para desarrolladores que deseen documentar sus proyectos.</p>"},{"location":"mkdocs/#requisitos-previos","title":"Requisitos Previos","text":""},{"location":"mkdocs/#actualizacion-del-paquete","title":"Actualizaci\u00f3n del paquete","text":"<ul> <li>Iniciamos sesion como administrador.  </li> <li>Antes de instalar algo actualizamos paquetes de Debian 12.   </li> <li>Usamos el comando \"apt update -y\"</li> <li></li> </ul>"},{"location":"mkdocs/#instalacion-de-git","title":"Instalaci\u00f3n de git","text":"<p>Con el comando \"apt install git\" Instalamos git en nuestra m\u00e1quina de Debian 12.</p>"},{"location":"mkdocs/#instalacion-de-python-y-pip","title":"Instalaci\u00f3n de Python Y pip","text":"<p>Para instalar temas de tercero es necesario que instalamos paquete de Python y pip.  - Con el comando \"apt install python3\" Instalamos una versi\u00f3n reciente de python3. - Con el comando \"apt install python3-dev python3-pip\" Instalamos pip es es gestor de paquetes de Python.</p>"},{"location":"mkdocs/#instalacion-modulo-gestor-de-entornos-virtuales","title":"Instalaci\u00f3n m\u00f3dulo gestor de entornos virtuales","text":"<ul> <li>Con el comando \"apt install python3.11-venv\" instalamos el m\u00f3dulo gestor de entornos virtuales.</li> </ul>"},{"location":"mkdocs/#creacion-de-un-nuevo-entorno-virtual-de-python","title":"Creaci\u00f3n de un nuevo entorno virtual de Python","text":"<p>Python necesita un directorio espec\u00edfico donde ubicar todos su software y librer\u00eda (entorno virtual). Para crear y activar este entorno virtual los pasos son: - Vamos a nuestro directorio de usuario cond \"cd /home/usuario\" - Aqu\u00ed crearemos un directorio con nuestro entorno de Python. - Con \"python3 -m venv my-env\" creamos una carpeta llamada my-env con todos el software y librer\u00edas de python. - Con el comando \"source my-env/bin/activate\" activamos entorno. - Nota: Para salir del entorno ejecuta: deactivate</p>"},{"location":"mkdocs/#instalacion-de-mkdoc","title":"Instalaci\u00f3n de MkDoc","text":"<ul> <li>Con el comando \"pip3 install mkdocs\" instalamos MKDOCS.  </li> </ul>"},{"location":"mkdocs/#comprobaciones-iniciales","title":"Comprobaciones Iniciales","text":"<ul> <li>Para moestrar la versi\u00f3n de Python 3 que est\u00e1 instalado actualmente en nuestro sistema ejecutamos el comando \"python3 - -version\".  </li> <li>El comando \"pip3 - -version\" uuestra la versi\u00f3n instalada de pip, el gestor de paquetes de Python, y la versi\u00f3n de Python con la que est\u00e1 asociada.</li> <li>Con el comando \"pip3 install requests\" Instalamos la biblioteca requests, que es una de las m\u00e1s utilizadas en Python para realizar solicitudes HTTP.</li> <li>El comando \"pip3 list\" ista todos los paquetes de Python instalados en el entorno actual junto con sus versiones.</li> <li>Con el comando \"pip3 freeze\"  muestramos todos los paquetes de Python instalados en un formato adecuado para un archivo requirements.txt.</li> <li>Con el comando \"mkdocs --version\" muestramos la versi\u00f3n instalada de MkDocs, confirmando que est\u00e1 presente en el entorno.</li> </ul>"},{"location":"mkdocs/#creacion-de-git-hub-repository","title":"Creaci\u00f3n de Git Hub repository","text":"<ul> <li>En la cuenta de GitHub creamos un repositorio llamado \"actividad22_3_RRH\" Sin fichero de fichero de README.</li> </ul>"},{"location":"mkdocs/#creacion-de-sitio-mkdocs","title":"Creaci\u00f3n de sitio MKDOCS","text":"<ul> <li>Con \"mkdocs new actividad22_3_RRH\" Creamos nuestro sitio MKDCOS llamado \"actividad22_3_RRH\".</li> <li>Vamos a este diretorio con \"cd actividad22_3_RRH\".</li> <li>Con el comando \"git init\" creamos el directorio como repositorio local.</li> <li>Luego con \"git remote add origin url-github-repo\" creamos una conexi\u00f3n remota con github repositorio.</li> </ul>"},{"location":"mkdocs/#configuracion-en-mkdocsyml","title":"Configuraci\u00f3n en \"mkdocs.yml\"","text":"<ul> <li>En el directorio de \"actividad22_3_RRH\" con el comando \"ls\" listamos todos los el contenido del sitio actividad22_3_RRHH.</li> <li>Con nano makdocs.yml abrimos y fichero mkdocs.yml. Este es el fichero de configuraci\u00f3n de sitio mkdocs.</li> <li>Dentro de este fichero Ponemos nombre de nuestro sitio (site_name:).</li> <li>ponemos url del sitio (site_url:).</li> <li>Luego creamos un secsi\u00f3n de nav (nav:).</li> <li>En nav ponemos nombres de las paginas y sus ficheros.</li> <li>En mi caso you tengo las siguientes paginas:</li> <li>HOME</li> <li>Hugo_anakle (p\u00e1gina creado por Rodrigo)</li> <li>Hugo_walden (p\u00e1gina creado por Hafsa)</li> <li>MKDOCS (p\u00e1gina creado por Rimsha)</li> <li>Luego aqui pongo tema de mi sitio (Theme: material).</li> <li>Tambi\u00e9n establecemos una esquema de color, logo y copyright.</li> </ul>"},{"location":"mkdocs/#servidor-local-de-desarrollo","title":"Servidor local de Desarrollo","text":"<ul> <li>Iniciamos un servidor local con el comando \"mkdocs serve\".</li> <li>Y visitamos el sitio desde el navegador.</li> </ul>"},{"location":"mkdocs/#construccion-y-publicacion","title":"Construcci\u00f3n y Publicaci\u00f3n","text":"<ul> <li>El comando \"mkdocs build Construye el sitio est\u00e1tico (formado por html, css y javascript) y lo almacena en un directorio llamado: site.</li> </ul>"},{"location":"mkdocs/#creacion-de-rama-gh-pages","title":"Creaci\u00f3n de rama gh-pages","text":"<ul> <li>Con el comando \"mkdocs gh-deploy\" creamos una nueva rama llamada gh-pages en el  repositorio local donde almacena el sitio web y lo despliega en GitHub  Pages.</li> </ul>"},{"location":"mkdocs/#construccion-del-sitio","title":"Construcci\u00f3n del Sitio","text":"<ul> <li>En el directorio \"actividad22_3_RRH\" Cambiamos la rama con **\"git checkout gh-pages\".</li> <li>Aqu\u00ed Creamos los  fichero markdown de nuestro sitio web (HOME, Hugo_anakle, Hugo_walden, MKDOCS).</li> </ul>"},{"location":"mkdocs/#subir-tema-en-el-github","title":"Subir tema en el GitHub","text":"<ul> <li>Con el commando \"git add .\" subimos los cambios al repositorio local.</li> <li>Con git commit -m \"mensjae\" guardamos los cambios en el historial del repositorio local.</li> <li>Con \"git push origin gh-pages\" subimos los cambios al repositorio remota en git hub.</li> </ul>"},{"location":"mkdocs/#publicacion-en-github-pages","title":"Publicaci\u00f3n en GitHub Pages","text":"<ul> <li>Abrimos el rpositorio y vamos a settings.</li> <li>Luego Vamos a pages.</li> <li>Aqu\u00ed en el Secci\u00f3n de \"Build and Deployment\" seleccionamso \"Deploy from branch\" y seleccionamos la rama \"gh-pages\" del carpeta \"root\".</li> <li>En Actions cuano el proceso de desplegar el sitio es completo puede visitar el sitio.</li> </ul>"},{"location":"mkdocs/#publicacion-en-cloudflare","title":"Publicaci\u00f3n en CloudFlare","text":"<ul> <li>Iniciamos sesi\u00f3n en el cuenta de CloudFlare.</li> <li>Vamos a la secci\u00f3n Pages desde el panel de control.</li> <li>Hacemos clic en Create a project.</li> </ul>"},{"location":"mkdocs/#configurar-un-dominio-personalizado","title":"Configurar un Dominio Personalizado","text":"<ul> <li>Aqu\u00ed en la secci\u00f3n Pages, seleccionamos repositorio de \u00b7actividad22_3_RRH\".</li> <li>Luego desplegamos este sitio web utilizando url que ha generado CloudFlare.</li> </ul>"}]}